name: todays-plot-build-deploy

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # GitHub repository에서 코드를 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Gradle을 사용하여 프로젝트 빌드
      - name: Build with Gradle
        run: ./gradlew clean build

      # 빌드 결과를 zip으로 압축 - 모든파일을 압축
#      - name: Zip build files
#        run: |
#          zip -r todays_plot *
#          mkdir -p deploy
#          mv todays_plot.zip deploy/todays_plot.zip

      # 필요한 파일들만 zip으로 압축
      - name: Prepare files for deployment
        run: |
          mkdir -p before-deploy
          cp scripts/*.sh before-deploy/
          cp appspec.yml before-deploy/
          cp build/libs/*.jar before-deploy/
          cd before-deploy && zip -r before-deploy.zip *
          cd ../ && mkdir -p deploy
          mv before-deploy/before-deploy.zip deploy/todays-plot.zip

      # AWS CLI 설정 (S3와 CodeDeploy에 필요)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # S3에 zip 파일 업로드
      - name: Upload to S3
        run: aws s3 cp deploy/todays_plot.zip s3://todays-plot-build/todays_plot.zip

      # CodeDeploy에 배포 트리거
      - name: Deploy to CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name todays-plot \
            --deployment-group-name todays-plot-group \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --s3-location bucket=todays-plot-build,key=todays_plot.zip,bundleType=zip